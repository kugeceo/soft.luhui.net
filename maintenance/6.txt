如何添加更多的翻页动画效果？


要添加更多翻页动画效果，只需按照以下步骤扩展现有代码即可。核心思路是添加新的CSS动画样式，然后将其集成到动画列表中：

### 步骤1：添加新的CSS动画样式
在样式表的动画部分添加新的动画定义，例如：

```css
/* 6. 折叠效果 */
.collapse-out {
    animation: collapse 0.6s forwards;
    transform-origin: center;
}

@keyframes collapse {
    0% { transform: scale(1); opacity: 1; }
    100% { transform: scale(0.1) rotate(10deg); opacity: 0; }
}

/* 7. 翻转效果 */
.flip-out {
    animation: flip 0.6s forwards;
    transform-origin: center;
}

@keyframes flip {
    0% { transform: rotateX(0deg); opacity: 1; }
    100% { transform: rotateX(90deg); opacity: 0; }
}

/* 8. 弹跳效果 */
.bounce-out {
    animation: bounce 0.6s forwards;
}

@keyframes bounce {
    0% { transform: translateX(0); opacity: 1; }
    30% { transform: translateX(-10px); }
    100% { transform: translateX(-50px); opacity: 0; }
}

/* 9. 百叶窗效果 */
.shutter-out {
    animation: shutter 0.6s forwards;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}

@keyframes shutter {
    0% { clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); opacity: 1; }
    100% { clip-path: polygon(0 0, 100% 0, 100% 0, 0 0); opacity: 0; }
}
```

### 步骤2：将新动画添加到动画列表
在JavaScript的`animations`数组中添加新的动画配置：

```javascript
const animations = [
    // 原有动画...
    { 
        prev: 'slide-out-right', 
        next: 'slide-out-left',
        name: '滑动效果'
    },
    // ...其他现有动画
    
    // 新增动画
    { 
        prev: 'collapse-out', 
        next: 'collapse-out',
        name: '折叠效果'
    },
    { 
        prev: 'flip-out', 
        next: 'flip-out',
        name: '翻转效果'
    },
    { 
        prev: 'bounce-out', 
        next: 'bounce-out',
        name: '弹跳效果'
    },
    { 
        prev: 'shutter-out', 
        next: 'shutter-out',
        name: '百叶窗效果'
    }
];
```

### 关键要点说明：

1. **动画设计原则**：
   - 保持动画时长一致（建议0.5-0.6秒）
   - 确保动画结束时元素完全隐藏（opacity: 0）
   - 为不同方向的翻页（上一页/下一页）设计协调的动画效果

2. **动画类型扩展方向**：
   - 3D变换：使用rotateX、rotateY、perspective等属性
   - 路径动画：使用transform结合translate实现复杂路径
   - 遮罩动画：使用clip-path创建特殊过渡效果
   - 组合动画：同时应用缩放、旋转、透明度变化

3. **避免冲突**：
   - 新动画类名不要与现有类名重复
   - 确保动画结束状态不会影响下一次动画

通过这种方式，你可以无限扩展动画效果库，每次翻页都会随机选择不同的动画，保持用户体验的新鲜感。